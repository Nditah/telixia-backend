{"version":3,"sources":["../../src/services/authenticate.js"],"names":["params","email","phone","phone_office","otp","password","Owner","findOne","where","Op","or","raw","user","Error","bcryptjs","compareSync","payload","id","userType","time","Date","token","jwt","sign","JWT","jwtSecret","expiresIn","tokenExpireTime","ownerAuthenticate","staffAuthenticate","driverAuthenticate","customerAuthenticate","Sequelize","Staff","then","office_id","Driver","vehicle_id","Customer"],"mappings":"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","file":"authenticate.js","sourcesContent":["import bcryptjs from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport * as Sequelize from \"sequelize\";\nimport { Staff, Driver, Owner, Customer } from \"../api/models\";\nimport { JWT } from \"../constants\";\n\nconst { Op } = Sequelize;\n\nexport function staffAuthenticate(params) {\n    // return next();\n    const { email, phone_office: phone, otp, password } = params;\n    return Staff.findOne({\n        where: {\n            [ Op.or ]: [{ email }, { phone_office: phone }],\n        },\n        raw: true,\n    })\n    // eslint-disable-next-line complexity\n        .then((user) => {\n            if (!user) { throw new Error(\"Authentication failed. User not found.\"); }\n            if (!(bcryptjs.compareSync(password || \"\", user.password)\n            || bcryptjs.compareSync(otp || \"\", user.otp))) {\n                throw new Error(\"Authentication failed. Wrong password or otp.\");\n            }\n            const payload = {\n                id: user.id,\n                userType: \"staff\",\n                email: user.email,\n                phone_office: user.phone_office,\n                office_id: user.office_id,\n                time: new Date(),\n            };\n\n            const token = jwt.sign(payload, JWT.jwtSecret, {\n                expiresIn: JWT.tokenExpireTime,\n            });\n            return token;\n        });\n}\n\nexport function driverAuthenticate(params) {\n    // return next();\n    const { email, phone_office: phone, otp, password } = params;\n    return Driver.findOne({\n        where: {\n            [ Op.or ]: [{ email }, { phone_office: phone }],\n        },\n        raw: true,\n    })\n    // eslint-disable-next-line complexity\n        .then((user) => {\n            if (!user) { throw new Error(\"Authentication failed. Driver not found.\"); }\n            if (!(bcryptjs.compareSync(password || \"\", user.password)\n            || bcryptjs.compareSync(otp || \"\", user.otp))) {\n                throw new Error(\"Authentication failed. Wrong password or otp.\");\n            }\n            const payload = {\n                id: user.id,\n                userType: \"driver\",\n                email: user.email,\n                phone_office: user.phone_office,\n                vehicle_id: user.vehicle_id,\n                time: new Date(),\n            };\n\n            const token = jwt.sign(payload, JWT.jwtSecret, {\n                expiresIn: JWT.tokenExpireTime,\n            });\n            return token;\n        });\n}\n\n\nexport async function ownerAuthenticate(params) {\n    // return next();\n    const { email, phone_office: phone, otp, password } = params;\n    const user = await Owner.findOne({\n        where: {\n            [Op.or]: [{ email }, { phone_office: phone }],\n        },\n        raw: true,\n    });\n    if (!user) {\n        throw new Error(\"Authentication failed. Driver not found.\");\n    }\n    if (!(bcryptjs.compareSync(password || \"\", user.password)\n        || bcryptjs.compareSync(otp || \"\", user.otp))) {\n        throw new Error(\"Authentication failed. Wrong password or otp.\");\n    }\n    const payload = {\n        id: user.id,\n        userType: \"driver\",\n        email: user.email,\n        phone_office: user.phone_office,\n        time: new Date(),\n    };\n    const token = jwt.sign(payload, JWT.jwtSecret, {\n        expiresIn: JWT.tokenExpireTime,\n    });\n    return token;\n}\n\nexport function customerAuthenticate(params) {\n    // return next();\n    const { email, phone, otp, password } = params;\n    return Customer.findOne({\n        where: {\n            [ Op.or ]: [{ email }, { phone }],\n        },\n        raw: true,\n    })\n    // eslint-disable-next-line complexity\n        .then((user) => {\n            if (!user) { throw new Error(\"Authentication failed. Customer not found.\"); }\n            if (!(bcryptjs.compareSync(password || \"\", user.password)\n            || bcryptjs.compareSync(otp || \"\", user.otp))) {\n                throw new Error(\"Authentication failed. Wrong password or otp.\");\n            }\n            const payload = {\n                id: user.id,\n                userType: \"customer\",\n                email: user.email,\n                phone: user.phone,\n                time: new Date(),\n            };\n\n            const token = jwt.sign(payload, JWT.jwtSecret, {\n                expiresIn: JWT.tokenExpireTime,\n            });\n            return token;\n        });\n}\n"]}