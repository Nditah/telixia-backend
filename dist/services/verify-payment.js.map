{"version":3,"sources":["../../src/services/verify-payment.js"],"names":["verifyPayment","payable","transaction_code","payload","FLUTTERWAVE","SECRET_KEY","options","method","uri","TEST_VERIFY_URL","body","headers","json","then","response","data","status","chargecode","amount","console","log","catch","err"],"mappings":";;;;;QAGgBA,a,GAAAA,a;;AAHhB;;;;AACA;;;;AAEO,SAASA,aAAT,CAAuBC,OAAvB,EAAgCC,gBAAhC,EAAkD;AACrD,QAAMC,UAAU;AACZ,kBAAUC,uBAAYC,UADV;AAEZ,iBAASH;AAFG,KAAhB;;AAKA;AACA,QAAMI,UAAU;AACZC,gBAAQ,MADI;AAEZC,aAAKJ,uBAAYK,eAFL;AAGZC,cAAMP,OAHM;AAIZQ,iBAAS;AACL,0BAAc,iBADT;AAEL,4BAAgB;AAFX,SAJG;AAQZC,cAAM,IARM,CAQA;AARA,KAAhB;;AAWA,WAAO,8BAAQN,OAAR,EACFO,IADE,CACG,UAAUC,QAAV,EAAoB;AAAA,kCACiBA,SAASJ,IAAT,CAAcK,IAD/B;AAAA,YACdC,MADc,uBACdA,MADc;AAAA,YACNC,UADM,uBACNA,UADM;AAAA,YACMC,MADN,uBACMA,MADN;;AAEtB,YAAIF,WAAW,YAAX,IAA2BC,cAAc,IAA7C,EAAmD;AAC/C,gBAAIC,WAAWjB,OAAf,EAAwB;AACpBkB,wBAAQC,GAAR,CAAY,oBAAZ;AACA;AACA,uBAAO,IAAP;AACH;AACDD,oBAAQC,GAAR,qBAA8BF,MAA9B,oBAAmDjB,OAAnD;AACA,mBAAO,KAAP;AACH;AACDkB,gBAAQC,GAAR,qBAA8BJ,MAA9B,qBAAoDC,UAApD;AACA,eAAO,KAAP;AACH,KAdE,EAeFI,KAfE,CAeI,UAAUC,GAAV,EAAe;AAClBH,gBAAQC,GAAR,CAAYE,GAAZ;AACA,eAAO,KAAP;AACH,KAlBE,CAAP;AAmBH","file":"verify-payment.js","sourcesContent":["import request from \"request-promise\";\nimport { FLUTTERWAVE } from \"../constants\";\n\nexport function verifyPayment(payable, transaction_code) {\n    const payload = {\n        \"SECKEY\": FLUTTERWAVE.SECRET_KEY,\n        \"txref\": transaction_code,\n    };\n\n    //please make sure to change this to production url when you go live\n    const options = {\n        method: 'POST',\n        uri: FLUTTERWAVE.TEST_VERIFY_URL,\n        body: payload,\n        headers: {\n            'User-Agent': 'Request-Promise',\n            'Content-Type': 'application/json'\n        },\n        json: true, // Automatically stringifies the body to JSON\n    };\n\n    return request(options)\n        .then(function (response) {\n            const { status, chargecode, amount } = response.body.data;\n            if (status === \"successful\" && chargecode == \"00\") {\n                if (amount === payable) {\n                    console.log(\"Payment successful\");\n                    // Update Invoice Status to Successful\n                    return true;\n                }\n                console.log(`Invalid Amount ${amount}, Expecting ${payable} `);\n                return false;\n            }\n            console.log(`Invalid status ${status}, chargecode ${chargecode} `);\n            return false;\n        })\n        .catch(function (err) {\n            console.log(err);\n            return false;\n        });\n}\n"]}