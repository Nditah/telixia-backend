{"version":3,"sources":["../../src/lib/helpers.js"],"names":["timestamp","dateDaysAgo","randomNum","cloneObject","getObjectByKey","addToArrayOfObjects","getClientAccess","hasProp","Date","toISOString","slice","since","today","setDate","getDate","Math","floor","random","model","source","Object","assign","arrayObject","key","value","find","obj","arrayOfObjects","limit","newObjectElement","size","keys","length","push","splice","req","ipAddress","ip","_remoteAddress","accessDate","_startTime","prop","prototype","hasOwnProperty","call"],"mappings":";;;;;QAAgBA,S,GAAAA,S;QAKAC,W,GAAAA,W;QAMAC,S,GAAAA,S;QAIAC,W,GAAAA,W;QAWAC,c,GAAAA,c;QAWAC,mB,GAAAA,mB;QAiBAC,e,GAAAA,e;QAOAC,O,GAAAA,O;AA7DT,SAASP,SAAT,GAAqB;AACxB,WAAU,IAAIQ,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC,CAAV;AACA;AACH;;AAEM,SAAST,WAAT,GAAgC;AAAA,QAAXU,KAAW,uEAAH,CAAG;;AACnC,QAAMC,QAAQ,IAAIJ,IAAJ,EAAd;AACAI,UAAMC,OAAN,CAAcD,MAAME,OAAN,KAAkBH,KAAhC;AACA,WAAOC,MAAMH,WAAN,EAAP;AACH;;AAEM,SAASP,SAAT,GAAqB;AACxB,WAAOa,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,OAA3B,CAAP;AACH;;AAEM,SAASd,WAAT,GAAyC;AAAA,QAApBe,KAAoB,uEAAZ,EAAY;AAAA,QAARC,MAAQ;;AAC5C,WAAOC,OAAOC,MAAP,CAAcH,KAAd,EAAqBC,MAArB,CAAP;AACH;;AAED;;;;;;;AAOO,SAASf,cAAT,CAAwBkB,WAAxB,EAAqCC,GAArC,EAA0CC,KAA1C,EAAiD;AACpD,WAAOF,YAAYG,IAAZ,CAAiB;AAAA,eAAOC,IAAKH,GAAL,MAAeC,KAAtB;AAAA,KAAjB,CAAP;AACH;;AAED;;;;;;;AAOO,SAASnB,mBAAT,CAA6BsB,cAA7B,EAA6CC,KAA7C,EAAoDC,gBAApD,EAAsE;AACzE,QAAMC,OAAOV,OAAOW,IAAP,CAAYJ,cAAZ,EAA4BK,MAAzC;AACA,QAAIF,OAAOF,KAAX,EAAkB;AACdD,uBAAeM,IAAf,CAAoBJ,gBAApB;AACH,KAFD,MAEO;AACP;AACIF,uBAAeO,MAAf,CAAsB,CAAtB,EAAyB,CAAzB;AACAP,uBAAeM,IAAf,CAAoBJ,gBAApB;AACH;AACD,WAAOF,cAAP;AACH;;AAED;;;;;AAKO,SAASrB,eAAT,CAAyB6B,GAAzB,EAA8B;AACjC,QAAMC,YAAYD,IAAIE,EAAJ,IAAUF,IAAIG,cAAhC;AACA;AACA,QAAMC,aAAaJ,IAAIK,UAAJ,IAAkB,EAArC;AACA,WAAO,EAAED,sBAAF,EAAcH,oBAAd,EAAP;AACH;;AAEM,SAAS7B,OAAT,CAAiBmB,GAAjB,EAAsBe,IAAtB,EAA4B;AAC/B,WAAOrB,OAAOsB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqClB,GAArC,EAA0Ce,IAA1C,CAAP;AACH","file":"helpers.js","sourcesContent":["export function timestamp() {\n    return `${new Date().toISOString().slice(0, 22)}Z`;\n    //   return new Date().toISOString().slice(0, 19).replace(\"T\", \" \")+\"Z\";\n}\n\nexport function dateDaysAgo(since = 0) {\n    const today = new Date();\n    today.setDate(today.getDate() - since);\n    return today.toISOString();\n}\n\nexport function randomNum() {\n    return Math.floor(Math.random() * 1000000);\n}\n\nexport function cloneObject(model = {}, source) {\n    return Object.assign(model, source);\n}\n\n/**\n * @description getObjectByKey returns the object from an Array of\n * Objects that has the key with a given value or undefined!\n * @param {Array} arrayObject Array of Objects\n * @param {String} key Object key could be a String or Integer\n * @param {String} value Object value could be a String or Integer\n */\nexport function getObjectByKey(arrayObject, key, value) {\n    return arrayObject.find(obj => obj[ key ] === value);\n}\n\n/**\n * @description addToArrayOfObjects add a new object item to an array of objects\n * @param {Object} arrayOfObjects the array of object\n * @param {Number} limit maximum number of objects the array should not exceed\n * @param {Object} newObjectElement the new item to be added to the array of objects\n * @returns {Object} the new array of Objects\n */\nexport function addToArrayOfObjects(arrayOfObjects, limit, newObjectElement) {\n    const size = Object.keys(arrayOfObjects).length;\n    if (size < limit) {\n        arrayOfObjects.push(newObjectElement);\n    } else {\n    // arr.splice(indexToRemove, numToRemove)\n        arrayOfObjects.splice(0, 1);\n        arrayOfObjects.push(newObjectElement);\n    }\n    return arrayOfObjects;\n}\n\n/**\n * @description getClientAccess get the Ip Address and TimeSTamp of a request object.\n * @param {String} req the request object\n * @returns {Object} { accessDate, ipAddress } access date and the ip address\n */\nexport function getClientAccess(req) {\n    const ipAddress = req.ip || req._remoteAddress;\n    // const lang = req.get(\"accept-language\");\n    const accessDate = req._startTime || \"\";\n    return { accessDate, ipAddress };\n}\n\nexport function hasProp(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n"]}