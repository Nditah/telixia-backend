{"version":3,"sources":["../../../src/api/invoice/routes.js"],"names":["router","express","Router","get","checkAuth","isValidAdmin","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord","flutterwaveWebhook"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAGA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAXA;;;;AA2BAF,OAAOG,GAAP,CAAW,WAAX,EAAwB,CAACC,wBAAD,EAAYC,2BAAZ,CAAxB,EAAmDC,uBAAnD;;AAEA;;;;;;;;;;;;AAYAN,OAAOO,IAAP,CAAY,WAAZ,EAAyB,CAACH,wBAAD,EAAYC,2BAAZ,CAAzB,EAAoDG,wBAApD;;AAEA;;;;;;;;;;;;;AAaAR,OAAOS,GAAP,CAAW,qBAAX,EAAkC,CAACL,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DK,wBAA7D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,qBAAd,EAAqC,CAACP,wBAAD,EAAYC,2BAAZ,CAArC,EAAgEO,wBAAhE;;AAEA;;AAEA;;;;;;;AAOAZ,OAAOO,IAAP,CAAY,sBAAZ,EAAoCM,8BAApC;;kBAGeb,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Invoice holds record of all invoices involving company vehicles\n */\nimport express from \"express\";\nimport { checkAuth, isValidAdmin } from \"../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord,\n    flutterwaveWebhook } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/invoices?id={recordId} Retrieve one or all records\n * @apiName RetrieveInvoice\n * @apiGroup Invoice\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i http://localhost/api/invoices?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i http://localhost/api/invoices?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/invoices\", [checkAuth, isValidAdmin], fetchRecord);\n\n/**\n * @api {post} /api/invoices Create invoices\n * @apiName CreateInvoice\n * @apiGroup Invoice\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} user_id Invoice user  fk\n * @apiParam {String} label Invoice label\n * @apiSuccess {Object} Invoice Invoice's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Invoice not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/invoices\", [checkAuth, isValidAdmin], createRecord);\n\n/**\n * @api {put} /api/invoices/{recordId} Update invoices\n * @apiName UpdateInvoice\n * @apiGroup Invoice\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} user_id Invoice user  fk\n * @apiParam {String} label Invoice label\n * @apiSuccess {Object} Invoice Invoice's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Invoice not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/invoices/:recordId\", [checkAuth, isValidAdmin], updateRecord);\n\n/**\n * @api {delete} /api/invoices/{recordId} Delete invoices\n * @apiName DeleteInvoice\n * @apiGroup Invoice\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Invoice not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/invoices/:recordId\", [checkAuth, isValidAdmin], deleteRecord);\n\n// FLUTTERWAVE\n\n/**\n * @api {post} /api/flutterwave/webhook flutterwave webhook\n * @apiName RetrieveFlutterwave\n * @apiGroup Flutterwave\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.post(\"/flutterwave/webhook\", flutterwaveWebhook);\n\n\nexport default router;\n"]}