{"version":3,"sources":["../../../src/api/contact-us/model.js"],"names":["Sequelize","force","DATABASE","DROP_TABLE_IF_EXIST","FALSE","schemaFetch","id","Joi","number","optional","offset","limit","fields","string","schemaCreate","fullname","required","email","trim","phone","subject","message","request_type","valid","schemaUpdate","request_status","remark","has_ticket","boolean","updated_by","schema","type","INTEGER","primaryKey","autoIncrement","STRING","allowNull","ENUM","defaultValue","BOOLEAN","options","timestamps","paranoid","underscored","freezeTableName","ContactUs","sequelize","define","sync","then","bulkCreate","table"],"mappings":"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","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {Number} id contact_us primaryKey\n * @property {String} fullname ContactUs fullname (required)\n * @property {String} email ContactUs email (required)\n * @property {String} phone ContactUs phone (required)\n * @property {String} subject ContactUs subject (required)\n * @property {String} message ContactUs message (required)\n * @property {String} request_type ContactUs request_type with values\n * \"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\", (required)\n * @property {String} request_status ContactUs request_status with values\n *  \"PENDING\", \"ACTIVE\", \"CLOSED\" (prohibited)\n * @property {String} remark ContactUs remark (prohibited)\n * @property {Boolean} has_ticket ContactUs has_ticket (prohibited)\n * @description ContactUs model holds record of all contact_us info from site visitors\n */\nimport Joi from \"joi\";\nimport * as Sequelize from \"sequelize\";\nimport sequelize from \"../../config/sequelize\";\nimport { DATABASE } from \"../../constants\";\nimport table from \"./table\";\n\nconst force = DATABASE.DROP_TABLE_IF_EXIST.FALSE;\n\nexport const schemaFetch = {\n    id: Joi.number().optional(),\n    offset: Joi.number().optional(),\n    limit: Joi.number().optional(),\n    fields: Joi.string().optional(),\n};\n\nexport const schemaCreate = {\n    fullname: Joi.string().required(),\n    email: Joi.string().trim().required(),\n    phone: Joi.string().trim().required(),\n    subject: Joi.string().required(),\n    message: Joi.string().required(),\n    request_type: Joi.string().trim().valid(\"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\").required(),\n};\n\nexport const schemaUpdate = {\n    request_type: Joi.string().trim().valid(\"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\").optional(),\n    request_status: Joi.string().trim().valid(\"ACTIVE\", \"CLOSED\").optional(),\n    remark: Joi.string(),\n    has_ticket: Joi.boolean(),\n    updated_by: Joi.number().required(),\n};\n\nconst schema = {\n    id: { type: Sequelize.INTEGER(11), primaryKey: true, autoIncrement: true },\n    fullname: { type: Sequelize.STRING, allowNull: false },\n    email: { type: Sequelize.STRING, allowNull: false },\n    phone: { type: Sequelize.STRING, allowNull: false },\n    subject: { type: Sequelize.STRING, allowNull: false },\n    message: { type: Sequelize.STRING, allowNull: false },\n    request_type: { type: Sequelize.ENUM(\"COMPLAINT\", \"ENQUIRY\", \"SUGGESTION\"), allowNull: false },\n    request_status: {\n        type: Sequelize.ENUM(\"PENDING\", \"ACTIVE\", \"CLOSED\"),\n        defaultValue: \"PENDING\",\n        allowNull: false,\n    },\n    remark: { type: Sequelize.STRING },\n    has_ticket: { type: Sequelize.BOOLEAN, allowNull: false, defaultValue: false },\n    updated_by: { type: Sequelize.INTEGER(11) },\n};\n\n\nconst options = {\n    timestamps: true,\n    paranoid: true,\n    underscored: true,\n    freezeTableName: true,\n};\nconst ContactUs = sequelize.define(\"contact_us\", schema, options);\nsequelize.sync()\n    .then(() => ContactUs.sync({ force }).then(() => ContactUs.bulkCreate(table)));\n    \nexport default ContactUs;\n"]}