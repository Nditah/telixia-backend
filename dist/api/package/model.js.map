{"version":3,"sources":["../../../src/api/package/model.js"],"names":["Sequelize","force","DATABASE","DROP_TABLE_IF_EXIST","TRUE","schemaFetch","id","Joi","number","optional","offset","limit","fields","string","schemaCreate","name","required","description","duration","cost","is_available","boolean","created_by","schemaUpdate","updated_by","schema","type","INTEGER","primaryKey","autoIncrement","STRING","allowNull","TINYINT","comment","defaultValue","DECIMAL","BOOLEAN","options","timestamps","paranoid","underscored","freezeTableName","Package","sequelize","define","sync","then","bulkCreate","table"],"mappings":";;;;;;;AAUA;;;;AACA;;IAAYA,S;;AACZ;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,QAAQC,oBAASC,mBAAT,CAA6BC,IAA3C,C,CAhBA;;;;;;;;;;AAkBO,IAAMC,oCAAc;AACvBC,QAAIC,cAAIC,MAAJ,GAAaC,QAAb,EADmB;AAEvBC,YAAQH,cAAIC,MAAJ,GAAaC,QAAb,EAFe;AAGvBE,WAAOJ,cAAIC,MAAJ,GAAaC,QAAb,EAHgB;AAIvBG,YAAQL,cAAIM,MAAJ,GAAaJ,QAAb;AAJe,CAApB;;AAOA,IAAMK,sCAAe;AACxBC,UAAMR,cAAIM,MAAJ,GAAaG,QAAb,EADkB;AAExBC,iBAAaV,cAAIM,MAAJ,GAAaG,QAAb,EAFW;AAGxBE,cAAUX,cAAIC,MAAJ,GAAaC,QAAb,EAHc;AAIxBU,UAAMZ,cAAIC,MAAJ,GAAaC,QAAb,EAJkB;AAKxBW,kBAAcb,cAAIc,OAAJ,GAAcZ,QAAd,EALU;AAMxBa,gBAAYf,cAAIC,MAAJ,GAAaQ,QAAb;AANY,CAArB;;AASA,IAAMO,sCAAe;AACxBR,UAAMR,cAAIM,MAAJ,GAAaJ,QAAb,EADkB;AAExBQ,iBAAaV,cAAIM,MAAJ,GAAaJ,QAAb,EAFW;AAGxBS,cAAUX,cAAIC,MAAJ,GAAaC,QAAb,EAHc;AAIxBU,UAAMZ,cAAIC,MAAJ,GAAaC,QAAb,EAJkB;AAKxBW,kBAAcb,cAAIc,OAAJ,GAAcZ,QAAd,EALU;AAMxBe,gBAAYjB,cAAIC,MAAJ,GAAaQ,QAAb;AANY,CAArB;;AASA,IAAMS,0BAAS;AAClBnB,QAAI,EAAEoB,MAAM1B,UAAU2B,OAAV,CAAkB,EAAlB,CAAR,EAA+BC,YAAY,IAA3C,EAAiDC,eAAe,IAAhE,EADc;AAElBd,UAAM,EAAEW,MAAM1B,UAAU8B,MAAlB,EAA0BC,WAAW,KAArC,EAFY;AAGlBd,iBAAa,EAAES,MAAM1B,UAAU8B,MAAlB,EAA0BC,WAAW,KAArC,EAHK;AAIlBb,cAAU,EAAEQ,MAAM1B,UAAUgC,OAAV,CAAkB,CAAlB,CAAR,EAA8BC,SAAS,OAAvC,EAAgDF,WAAW,KAA3D,EAAkEG,cAAc,CAAhF,EAJQ;AAKlBf,UAAM,EAAEO,MAAM1B,UAAUmC,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCJ,WAAW,KAA7C,EAAoDG,cAAc,QAAlE,EALY;AAMlBd,kBAAc,EAAEM,MAAM1B,UAAUoC,OAAlB,EAA2BL,WAAW,KAAtC,EAA6CG,cAAc,IAA3D,EANI;AAOlBZ,gBAAY,EAAEI,MAAM1B,UAAU2B,OAAV,CAAkB,EAAlB,CAAR,EAA+BI,WAAW,KAA1C,EAAiDG,cAAc,CAA/D,EAPM;AAQlBV,gBAAY,EAAEE,MAAM1B,UAAU2B,OAAV,CAAkB,EAAlB,CAAR;AARM,CAAf;;AAWP,IAAMU,UAAU;AACZC,gBAAY,IADA;AAEZC,cAAU,IAFE;AAGZC,iBAAa,IAHD;AAIZC,qBAAiB;AAJL,CAAhB;AAMA,IAAMC,UAAUC,oBAAUC,MAAV,CAAiB,SAAjB,EAA4BnB,MAA5B,EAAoCY,OAApC,CAAhB;AACAM,oBAAUE,IAAV,GACKC,IADL,CACU;AAAA,WAAMJ,QAAQG,IAAR,CAAa,EAAE5C,YAAF,EAAb,EAAwB6C,IAAxB,CAA6B;AAAA,eAAMJ,QAAQK,UAAR,CAAmBC,eAAnB,CAAN;AAAA,KAA7B,CAAN;AAAA,CADV;;kBAGeN,O","file":"model.js","sourcesContent":["/**\n * @author 4Dcoder\n * @property {Number} id package primaryKey\n * @property {String} name Package full name (required)\n * @property {String} description Package description (required)\n * @property {Number} duration Package duration (required)\n * @property {Number} cost Package cost (required)\n * @property {Boolean} is_available Package is current availability\n * @description Package model holds record of all packages the company deals with\n */\nimport Joi from \"joi\";\nimport * as Sequelize from \"sequelize\";\nimport sequelize from \"../../config/sequelize\";\nimport table from \"./table\";\nimport { DATABASE } from \"../../constants\";\n\nconst force = DATABASE.DROP_TABLE_IF_EXIST.TRUE;\n\nexport const schemaFetch = {\n    id: Joi.number().optional(),\n    offset: Joi.number().optional(),\n    limit: Joi.number().optional(),\n    fields: Joi.string().optional(),\n};\n\nexport const schemaCreate = {\n    name: Joi.string().required(),\n    description: Joi.string().required(),\n    duration: Joi.number().optional(),\n    cost: Joi.number().optional(),\n    is_available: Joi.boolean().optional(),\n    created_by: Joi.number().required(),\n};\n\nexport const schemaUpdate = {\n    name: Joi.string().optional(),\n    description: Joi.string().optional(),\n    duration: Joi.number().optional(),\n    cost: Joi.number().optional(),\n    is_available: Joi.boolean().optional(),\n    updated_by: Joi.number().required(),\n};\n\nexport const schema = {\n    id: { type: Sequelize.INTEGER(11), primaryKey: true, autoIncrement: true },\n    name: { type: Sequelize.STRING, allowNull: false },\n    description: { type: Sequelize.STRING, allowNull: false },\n    duration: { type: Sequelize.TINYINT(2), comment: \"Weeks\", allowNull: false, defaultValue: 4 },\n    cost: { type: Sequelize.DECIMAL(10, 2), allowNull: false, defaultValue: 20000.00 },\n    is_available: { type: Sequelize.BOOLEAN, allowNull: false, defaultValue: true },\n    created_by: { type: Sequelize.INTEGER(11), allowNull: false, defaultValue: 1 },\n    updated_by: { type: Sequelize.INTEGER(11) },\n};\n\nconst options = {\n    timestamps: true,\n    paranoid: true,\n    underscored: true,\n    freezeTableName: true,\n};\nconst Package = sequelize.define(\"package\", schema, options);\nsequelize.sync()\n    .then(() => Package.sync({ force }).then(() => Package.bulkCreate(table)));\n    \nexport default Package;\n"]}