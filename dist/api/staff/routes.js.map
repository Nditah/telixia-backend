{"version":3,"sources":["../../../src/api/staff/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord","login"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAVA;;;;AA0BAF,OAAOG,GAAP,CAAW,QAAX,EAAqB,CAACC,wBAAD,EAAYC,2BAAZ,CAArB,EAAgDC,uBAAhD;;AAEA;;;;;;;;;;;;;AAaAN,OAAOO,IAAP,CAAY,QAAZ,EAAsB,CAACH,wBAAD,EAAYC,2BAAZ,CAAtB,EAAiDG,wBAAjD;;AAEA;;;;;;;;;;;;;;AAcAR,OAAOS,GAAP,CAAW,kBAAX,EAA+B,CAACL,wBAAD,EAAYC,2BAAZ,CAA/B,EAA0DK,wBAA1D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,kBAAd,EAAkC,CAACP,wBAAD,EAAYC,2BAAZ,CAAlC,EAA6DO,wBAA7D;;AAEA;;;;;;;;;;;;AAYAZ,OAAOO,IAAP,CAAY,cAAZ,EAA4BM,iBAA5B;;kBAEeb,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Staff holds record of all staff with terminals\n */\nimport express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord, login } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/staff?id={recordId} Retrieve one or all records\n * @apiName RetrieveStaff\n * @apiGroup Employee\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i http://localhost/api/staff?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i http://localhost/api/staff?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records of staff distributed across terminals.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/staff\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/staff Create staff\n * @apiName CreateStaff\n * @apiGroup Employee\n * @apiParam {String} access_token master access token.\n * @apiParam {Integer} id Staff primaryKey\n * @apiParam {Integer} created_by Staff record created by\n * @apiParam {Number} created_by Staff record created by\n * @apiSuccess {Object} Staff Staff's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Staff not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/staff\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/staff/{recordId} Update staff\n * @apiName UpdateStaff\n * @apiGroup Employee\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} recordId Staff record id (primaryKey)\n * @apiParam {String} name Staff short name\n * @apiParam {Number} updated_by Staff record modified by\n * @apiSuccess {Object} Staff Staff's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Staff not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/staff/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/staff/{recordId} Delete staff\n * @apiName DeleteStaff\n * @apiGroup Employee\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Staff not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/staff/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\n/**\n * @api {post} /api/staff/login Login Staff\n * @apiName LoginStaff\n * @apiGroup Employee\n * @apiPermission master\n * @apiParam {String} email Staff email address (optional)\n * @apiParam {String} password Staff password (optional)\n * @apiParam {String} office_phone Staff official phone number (optional)\n * @apiParam {String} otp Staff One-Time-Password sent to phone (optional)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 Staff not found.\n */\nrouter.post(\"/staff/login\", login);\n\nexport default router;\n"]}