{"version":3,"sources":["../../../src/api/transaction/routes.js"],"names":["router","express","Router","get","checkAuth","isValidStaff","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAVA;;;;AA0BAF,OAAOG,GAAP,CAAW,SAAX,EAAsB,CAACC,wBAAD,EAAYC,2BAAZ,CAAtB,EAAiDC,uBAAjD;;AAEA;;;;;;;;;;;;AAYAN,OAAOO,IAAP,CAAY,SAAZ,EAAuB,CAACH,wBAAD,EAAYC,2BAAZ,CAAvB,EAAkDG,wBAAlD;;AAEA;;;;;;;;;;;;;AAaAR,OAAOS,GAAP,CAAW,mBAAX,EAAgC,CAACL,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DK,wBAA3D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,mBAAd,EAAmC,CAACP,wBAAD,EAAYC,2BAAZ,CAAnC,EAA8DO,wBAA9D;;kBAEeZ,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Asset holds record of all alerts involving company vehicles\n */\nimport express from \"express\";\nimport { checkAuth, isValidStaff } from \"../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/alerts?id={recordId} Retrieve one or all records\n * @apiName RetrieveAsset\n * @apiGroup Asset\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i http://localhost/api/alerts?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i http://localhost/api/alerts?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records  of account headings belonging to one classification\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/alerts\", [checkAuth, isValidStaff], fetchRecord);\n\n/**\n * @api {post} /api/alerts Create alerts\n * @apiName CreateAsset\n * @apiGroup Asset\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} user_id Asset user  fk\n * @apiParam {String} label Asset label\n * @apiSuccess {Object} Asset Asset's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/alerts\", [checkAuth, isValidStaff], createRecord);\n\n/**\n * @api {put} /api/alerts/{recordId} Update alerts\n * @apiName UpdateAsset\n * @apiGroup Asset\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} user_id Asset user  fk\n * @apiParam {String} label Asset label\n * @apiSuccess {Object} Asset Asset's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/alerts/:recordId\", [checkAuth, isValidStaff], updateRecord);\n\n/**\n * @api {delete} /api/alerts/{recordId} Delete alerts\n * @apiName DeleteAsset\n * @apiGroup Asset\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Asset not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/alerts/:recordId\", [checkAuth, isValidStaff], deleteRecord);\n\nexport default router;\n"]}