{"version":3,"sources":["../../../src/api/admin/routes.js"],"names":["router","express","Router","get","checkAuth","isValidAdmin","fetchRecord","post","createRecord","put","updateRecord","delete","deleteRecord","login"],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAMA,SAASC,kBAAQC,MAAR,EAAf;;AAEA;;;;;;;;;;;;;;;;AAVA;;;;AA0BAF,OAAOG,GAAP,CAAW,SAAX,EAAsB,CAACC,wBAAD,EAAYC,2BAAZ,CAAtB,EAAiDC,uBAAjD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CAN,OAAOO,IAAP,CAAY,SAAZ,EAAuB,CAACH,wBAAD,EAAYC,2BAAZ,CAAvB,EAAkDG,wBAAlD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CAR,OAAOS,GAAP,CAAW,mBAAX,EAAgC,CAACL,wBAAD,EAAYC,2BAAZ,CAAhC,EAA2DK,wBAA3D;;AAEA;;;;;;;;;;AAUAV,OAAOW,MAAP,CAAc,mBAAd,EAAmC,CAACP,wBAAD,EAAYC,2BAAZ,CAAnC,EAA8DO,wBAA9D;;AAEA;;;;;;;;;;;;AAYAZ,OAAOO,IAAP,CAAY,eAAZ,EAA6BM,iBAA7B;;kBAEeb,M","file":"routes.js","sourcesContent":["/**\n * @author 4Decoder\n * @description Admin holds record of all admins with terminals\n */\nimport express from \"express\";\nimport { checkAuth, isValidAdmin } from \"../../middleware/authorization\";\nimport { fetchRecord, createRecord, updateRecord, deleteRecord, login } from \"./controller\";\n\nconst router = express.Router();\n\n/**\n * @api {get} /api/admins?id={recordId} Retrieve one or all records\n * @apiName RetrieveAdmin\n * @apiGroup Admin\n * @apiExample {curl} Example usage for retieving a single record:\n *      curl -i http://localhost/api/admins?id=2&fields=id,created_at,updated_at\n * @apiExample {curl} Example usage for retieving multiple records:\n *      curl -i http://localhost/api/admins?offset=10&limit=50\n * @apiParam {Number} id Unique id of the record to retrieve (optional)\n * @apiParam {Number} offset Number of records to skip (optional)\n * @apiParam {Number} limit Maximum Number of records to retrieve (optional)\n * @apiParam {String} fields Comma-separated list of record's attributes to retrieve (optional)\n * @apiDescription Records of admins distributed across terminals.\n * @apiSuccess {Object[]} Array of Objects of records.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n */\nrouter.get(\"/admins\", [checkAuth, isValidAdmin], fetchRecord);\n\n/**\n * @api {post} /api/admins Create admins\n * @apiName CreateAdmin\n * @apiGroup Admin\n * @apiParam {String} access_token master access token.\n * @apiParam {String} title Admin title (optional)\n * @apiParam {String} surname Admin  surname (required)\n * @apiParam {String} other_name Admin  other_name (required)\n * @apiParam {String} gender Admin  gender (required)\n * @apiParam {Date} birth_date Admin  birth_date (required)\n * @apiParam {String} marital_status Admin  marital_status (required)\n * @apiParam {String} phone_office Admin  phone_office (required)\n * @apiParam {String} phone_personal Admin  phone_personal (required)\n * @apiParam {String} address Admin  address (required)\n * @apiParam {String} country_iso2 Admin  country_iso2 (required)\n * @apiParam {String} email Admin  email (required)\n * @apiParam {String} password Admin  password (required)\n * @apiParam {String} otp Admin  otp (required)\n * @apiParam {Integer} otp_count Admin  otp_count (required)\n * @apiParam {String} kin Admin  kin (required)\n * @apiParam {String} kin_phone Admin  kin_phone (required)\n * @apiParam {String} kin_address Admin  kin_address (required)\n * @apiParam {String} job_responsibility Admin  job_responsibility (required)\n * @apiParam {String} job_title Admin  job_title (required)\n * @apiParam {String} highest_qualification Admin  highest_qualification (optional)\n * @apiParam {String} highest_institution Admin  highest_institution (optional)\n * @apiParam {String} employment_status Admin  employment_status (required)\n * @apiParam {Date} employment_date Admin  employment_date (required)\n * @apiParam {Integer} monthly_tax Admin  monthly_tax (optional)\n * @apiParam {Integer} monthly_salary Admin  monthly_salary (required)\n * @apiParam {Integer} bank_id Admin  bank_id (required)\n * @apiParam {String} bank_account_number Admin  bank_account_number (required)\n * @apiParam {String} bank_account_name Admin  bank_account_name (required)\n * @apiParam {Boolean} is_salary_payable Admin  is_salary_payable (optional)\n * @apiParam {Boolean} is_document_complete Admin  is_document_complete (optional)\n * @apiParam {Integer} superior_id Admin  superior_id (optional)\n * @apiParam {String} remark Admin  remark (optional)\n * @apiParam {String} photo Admin  photo (optional)  \n * @apiParam {Date} last_login_date Admin  last_login_date (optional)\n * @apiParam {String} last_login_ip Admin  last_login_ip (optional)\n * @apiSuccess {Object} Admin Admin's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Admin not found.\n * @apiError 401 master access only.\n */\nrouter.post(\"/admins\", [checkAuth, isValidAdmin], createRecord);\n\n/**\n * @api {put} /api/admins/{recordId} Update admins\n * @apiName UpdateAdmin\n * @apiGroup Admin\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiParam {Number} recordId Admin record id (primaryKey)\n * @apiParam {String} title Admin title (optional)\n * @apiParam {String} surname Admin  surname (optional)\n * @apiParam {String} other_name Admin  other_name (optional)\n * @apiParam {String} gender Admin  gender (optional)\n * @apiParam {Date} birth_date Admin  birth_date (optional)\n * @apiParam {String} marital_status Admin  marital_status (optional)\n * @apiParam {String} phone_office Admin  phone_office (optional)\n * @apiParam {String} phone_personal Admin  phone_personal (optional)\n * @apiParam {String} address Admin  address (optional)\n * @apiParam {String} country_iso2 Admin  country_iso2 (optional)\n * @apiParam {String} email Admin  email (optional)\n * @apiParam {String} password Admin  password (optional)\n * @apiParam {String} otp Admin  otp (optional)\n * @apiParam {Integer} otp_count Admin  otp_count (optional)\n * @apiParam {String} kin Admin  kin (optional)\n * @apiParam {String} kin_phone Admin  kin_phone (optional)\n * @apiParam {String} kin_address Admin  kin_address (optional)\n * @apiParam {String} job_responsibility Admin  job_responsibility (optional)\n * @apiParam {String} job_title Admin  job_title (optional)\n * @apiParam {String} highest_qualification Admin  highest_qualification (optional)\n * @apiParam {String} highest_institution Admin  highest_institution (optional)\n * @apiParam {String} employment_status Admin  employment_status (optional)\n * @apiParam {Date} employment_date Admin  employment_date (optional)\n * @apiParam {Integer} monthly_tax Admin  monthly_tax (optional)\n * @apiParam {Integer} monthly_salary Admin  monthly_salary (optional)\n * @apiParam {Integer} bank_id Admin  bank_id (optional)\n * @apiParam {String} bank_account_number Admin  bank_account_number (optional)\n * @apiParam {String} bank_account_name Admin  bank_account_name (optional)\n * @apiParam {Boolean} is_salary_payable Admin  is_salary_payable (optional)\n * @apiParam {Boolean} is_document_complete Admin  is_document_complete (optional)\n * @apiParam {Integer} superior_id Admin  superior_id (optional)\n * @apiParam {String} remark Admin  remark (optional)\n * @apiParam {String} photo Admin  photo (optional)  \n * @apiParam {Date} last_login_date Admin  last_login_date (optional)\n * @apiParam {String} last_login_ip Admin  last_login_ip (optional)\n * @apiSuccess {Object} Admin Admin's data.\n * @apiError {Object} 400 Some parameters may contain invalid values.\n * @apiError 404 Admin not found.\n * @apiError 401 master access only.\n */\nrouter.put(\"/admins/:recordId\", [checkAuth, isValidAdmin], updateRecord);\n\n/**\n * @api {delete} /api/admins/{recordId} Delete admins\n * @apiName DeleteAdmin\n * @apiGroup Admin\n * @apiPermission master\n * @apiParam {String} access_token master access token.\n * @apiSuccess (Success 204) 204 No Content.\n * @apiError 404 Admin not found.\n * @apiError 401 master access only.\n */\nrouter.delete(\"/admins/:recordId\", [checkAuth, isValidAdmin], deleteRecord);\n\n/**\n * @api {post} /api/admins/login Login Admin\n * @apiName LoginAdmin\n * @apiGroup Admin\n * @apiPermission master\n * @apiParam {String} email Admin email address (optional)\n * @apiParam {String} password Admin password (optional)\n * @apiParam {String} office_phone Admin official phone number (optional)\n * @apiParam {String} otp Admin One-Time-Password sent to phone (optional)\n * @apiSuccess (Success 200) 200 Login Successful.\n * @apiError 404 Admin not found.\n */\nrouter.post(\"/admins/login\", login);\n\nexport default router;\n"]}