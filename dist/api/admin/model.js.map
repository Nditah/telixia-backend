{"version":3,"sources":["../../../src/api/admin/model.js"],"names":["Sequelize","force","DATABASE","DROP_TABLE_IF_EXIST","FALSE","schemaLogin","email","Joi","string","optional","phone_office","otp","password","schemaFetch","id","number","offset","limit","fields","schemaCreate","serial","category","title","surname","required","other_name","gender","birth_date","date","marital_status","children","phone_personal","address","village","state_id","county_id","country_iso2","otp_count","kin","kin_phone","kin_address","guarantor1","guarantor1_phone","guarantor1_address","guarantor2","guarantor2_phone","guarantor2_address","profession","qualification","institution","employment_status","tax","basic_salary","bonus","entertainment_allowance","house_allowance","lunch_allowance","medical_allowance","transport_allowance","utility_allowance","welfare_allowance","pension","assurance","bank_id","bank_account_number","bank_account_name","rank_id","office_id","superior_id","subsidiary","valid","Object","values","SUBSIDIARY","terminal_id","vehicle_id","notice","rating","remark","photo","is_salary_payable","boolean","is_document_complete","access_level","approved_by","approved_date","disengaged_by","disengaged_date","created_by","schemaUpdate","updated_by","schema","type","INTEGER","primaryKey","autoIncrement","STRING","notEmpty","ENUM","GENDER","MALE","FEMALE","defaultValue","allowNull","DATEONLY","MARITAL_STATUS","SINGLE","MARRIED","DIVORSED","SEPARATED","WIDOWED","validate","isEmail","EMPLOYMENT_STATUS","ON_DUTY","ON_LEAVE","ON_RETIREMENT","ON_SUSPENSION","ON_PROBATION","DECIMAL","BOOLEAN","DATE","last_login","options","timestamps","paranoid","underscored","freezeTableName","Admin","sequelize","define","sync","then","bulkCreate","table"],"mappings":";;;;;;;AAQA;;;;AACA;;IAAYA,S;;AACZ;;;;AACA;;AAEA;;;;;;;;AAEA,IAAMC,QAAQC,oBAASC,mBAAT,CAA6BC,KAA3C,C,CAfA;;;;;;;;AAiBO,IAAMC,oCAAc;AACvBC,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EADgB;AAEvBC,kBAAcH,cAAIC,MAAJ,GAAaC,QAAb,EAFS;AAGvBE,SAAKJ,cAAIC,MAAJ,GAAaC,QAAb,EAHkB;AAIvBG,cAAUL,cAAIC,MAAJ,GAAaC,QAAb;AAJa,CAApB;;AAOA,IAAMI,oCAAc;AACvBC,QAAIP,cAAIQ,MAAJ,GAAaN,QAAb,EADmB;AAEvBO,YAAQT,cAAIQ,MAAJ,GAAaN,QAAb,EAFe;AAGvBQ,WAAOV,cAAIQ,MAAJ,GAAaN,QAAb,EAHgB;AAIvBS,YAAQX,cAAIC,MAAJ,GAAaC,QAAb;AAJe,CAApB;;AAOA,IAAMU,sCAAe;AACxBC,YAAQb,cAAIC,MAAJ,GAAaC,QAAb,EADgB;AAExBY,cAAUd,cAAIC,MAAJ,GAAaC,QAAb,EAFc;AAGxBa,WAAOf,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBc,aAAShB,cAAIC,MAAJ,GAAagB,QAAb,EAJe;AAKxBC,gBAAYlB,cAAIC,MAAJ,GAAagB,QAAb,EALY;AAMxBE,YAAQnB,cAAIC,MAAJ,GAAagB,QAAb,EANgB;AAOxBG,gBAAYpB,cAAIqB,IAAJ,GAAWJ,QAAX,EAPY;AAQxBK,oBAAgBtB,cAAIC,MAAJ,GAAagB,QAAb,EARQ;AASxBM,cAAUvB,cAAIQ,MAAJ,GAAaN,QAAb,EATc;AAUxBC,kBAAcH,cAAIC,MAAJ,GAAagB,QAAb,EAVU;AAWxBO,oBAAgBxB,cAAIC,MAAJ,GAAaC,QAAb,EAXQ;AAYxBuB,aAASzB,cAAIC,MAAJ,GAAaC,QAAb,EAZe;AAaxBwB,aAAS1B,cAAIC,MAAJ,GAAaC,QAAb,EAbe;AAcxByB,cAAU3B,cAAIQ,MAAJ,GAAaS,QAAb,EAdc;AAexBW,eAAW5B,cAAIQ,MAAJ,GAAaS,QAAb,EAfa;AAgBxBY,kBAAc7B,cAAIC,MAAJ,GAAaC,QAAb,EAhBU;AAiBxBH,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EAjBiB;AAkBxBG,cAAUL,cAAIC,MAAJ,GAAaC,QAAb,EAlBc;AAmBxBE,SAAKJ,cAAIC,MAAJ,GAAaC,QAAb,EAnBmB;AAoBxB4B,eAAW9B,cAAIQ,MAAJ,GAAaN,QAAb,EApBa;AAqBxB6B,SAAK/B,cAAIC,MAAJ,GAAagB,QAAb,EArBmB;AAsBxBe,eAAWhC,cAAIC,MAAJ,GAAagB,QAAb,EAtBa;AAuBxBgB,iBAAajC,cAAIC,MAAJ,GAAagB,QAAb,EAvBW;AAwBxBiB,gBAAYlC,cAAIC,MAAJ,GAAagB,QAAb,EAxBY;AAyBxBkB,sBAAkBnC,cAAIC,MAAJ,GAAagB,QAAb,EAzBM;AA0BxBmB,wBAAoBpC,cAAIC,MAAJ,GAAagB,QAAb,EA1BI;AA2BxBoB,gBAAYrC,cAAIC,MAAJ,GAAaC,QAAb,EA3BY;AA4BxBoC,sBAAkBtC,cAAIC,MAAJ,GAAaC,QAAb,EA5BM;AA6BxBqC,wBAAoBvC,cAAIC,MAAJ,GAAaC,QAAb,EA7BI;AA8BxBsC,gBAAYxC,cAAIC,MAAJ,GAAaC,QAAb,EA9BY;AA+BxBuC,mBAAezC,cAAIC,MAAJ,GAAaC,QAAb,EA/BS;AAgCxBwC,iBAAa1C,cAAIC,MAAJ,GAAaC,QAAb,EAhCW;AAiCxByC,uBAAmB3C,cAAIC,MAAJ,GAAagB,QAAb,EAjCK;AAkCxB2B,SAAK5C,cAAIQ,MAAJ,GAAaN,QAAb,EAlCmB;AAmCxB2C,kBAAc7C,cAAIQ,MAAJ,GAAaN,QAAb,EAnCU;AAoCxB4C,WAAO9C,cAAIQ,MAAJ,GAAaN,QAAb,EApCiB;AAqCxB6C,6BAAyB/C,cAAIQ,MAAJ,GAAaN,QAAb,EArCD;AAsCxB8C,qBAAiBhD,cAAIQ,MAAJ,GAAaN,QAAb,EAtCO;AAuCxB+C,qBAAiBjD,cAAIQ,MAAJ,GAAaN,QAAb,EAvCO;AAwCxBgD,uBAAmBlD,cAAIQ,MAAJ,GAAaN,QAAb,EAxCK;AAyCxBiD,yBAAqBnD,cAAIQ,MAAJ,GAAaN,QAAb,EAzCG;AA0CxBkD,uBAAmBpD,cAAIQ,MAAJ,GAAaN,QAAb,EA1CK;AA2CxBmD,uBAAmBrD,cAAIQ,MAAJ,GAAaN,QAAb,EA3CK;AA4CxBoD,aAAStD,cAAIQ,MAAJ,GAAaN,QAAb,EA5Ce;AA6CxBqD,eAAWvD,cAAIQ,MAAJ,GAAaN,QAAb,EA7Ca;AA8CxBsD,aAASxD,cAAIQ,MAAJ,GAAaN,QAAb,EA9Ce;AA+CxBuD,yBAAqBzD,cAAIC,MAAJ,GAAaC,QAAb,EA/CG;AAgDxBwD,uBAAmB1D,cAAIC,MAAJ,GAAaC,QAAb,EAhDK;AAiDxByD,aAAS3D,cAAIQ,MAAJ,GAAaN,QAAb,EAjDe;AAkDxB0D,eAAW5D,cAAIQ,MAAJ,GAAaS,QAAb,EAlDa;AAmDxB4C,iBAAa7D,cAAIQ,MAAJ,GAAaS,QAAb,EAnDW;AAoDxB6C,gBAAY9D,cAAIC,MAAJ,GAAa8D,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,qBAAd,CAAnB,EAA8CjD,QAA9C,EApDY;AAqDxBkD,iBAAanE,cAAIQ,MAAJ,GAAaS,QAAb,EArDW;AAsDxBmD,gBAAYpE,cAAIQ,MAAJ,GAAaN,QAAb,EAtDY;AAuDxBmE,YAAQrE,cAAIC,MAAJ,GAAaC,QAAb,EAvDgB;AAwDxBoE,YAAQtE,cAAIC,MAAJ,GAAaC,QAAb,EAxDgB;AAyDxBqE,YAAQvE,cAAIC,MAAJ,GAAaC,QAAb,EAzDgB;AA0DxBsE,WAAOxE,cAAIC,MAAJ,GAAaC,QAAb,EA1DiB;AA2DxBuE,uBAAmBzE,cAAI0E,OAAJ,GAAcxE,QAAd,EA3DK;AA4DxByE,0BAAsB3E,cAAI0E,OAAJ,GAAcxE,QAAd,EA5DE;AA6DxB0E,kBAAc5E,cAAIC,MAAJ,GAAaC,QAAb,EA7DU;AA8DxB2E,iBAAa7E,cAAIQ,MAAJ,GAAaN,QAAb,EA9DW;AA+DxB4E,mBAAe9E,cAAIqB,IAAJ,GAAWnB,QAAX,EA/DS;AAgExB6E,mBAAe/E,cAAIQ,MAAJ,GAAaN,QAAb,EAhES;AAiExB8E,qBAAiBhF,cAAIqB,IAAJ,GAAWnB,QAAX,EAjEO;AAkExB+E,gBAAYjF,cAAIQ,MAAJ,GAAaS,QAAb;AAlEY,CAArB;;AAqEA,IAAMiE,sCAAe;AACxBrE,YAAQb,cAAIC,MAAJ,GAAaC,QAAb,EADgB;AAExBY,cAAUd,cAAIC,MAAJ,GAAaC,QAAb,EAFc;AAGxBa,WAAOf,cAAIC,MAAJ,GAAaC,QAAb,EAHiB;AAIxBc,aAAShB,cAAIC,MAAJ,GAAaC,QAAb,EAJe;AAKxBgB,gBAAYlB,cAAIC,MAAJ,GAAaC,QAAb,EALY;AAMxBiB,YAAQnB,cAAIC,MAAJ,GAAaC,QAAb,EANgB;AAOxBkB,gBAAYpB,cAAIqB,IAAJ,GAAWnB,QAAX,EAPY;AAQxBoB,oBAAgBtB,cAAIC,MAAJ,GAAaC,QAAb,EARQ;AASxBqB,cAAUvB,cAAIQ,MAAJ,GAAaN,QAAb,EATc;AAUxBC,kBAAcH,cAAIC,MAAJ,GAAaC,QAAb,EAVU;AAWxBsB,oBAAgBxB,cAAIC,MAAJ,GAAaC,QAAb,EAXQ;AAYxBuB,aAASzB,cAAIC,MAAJ,GAAaC,QAAb,EAZe;AAaxBwB,aAAS1B,cAAIC,MAAJ,GAAaC,QAAb,EAbe;AAcxByB,cAAU3B,cAAIQ,MAAJ,GAAaN,QAAb,EAdc;AAexB0B,eAAW5B,cAAIQ,MAAJ,GAAaN,QAAb,EAfa;AAgBxB2B,kBAAc7B,cAAIC,MAAJ,GAAaC,QAAb,EAhBU;AAiBxBH,WAAOC,cAAIC,MAAJ,GAAaC,QAAb,EAjBiB;AAkBxBG,cAAUL,cAAIC,MAAJ,GAAaC,QAAb,EAlBc;AAmBxBE,SAAKJ,cAAIC,MAAJ,GAAaC,QAAb,EAnBmB;AAoBxB4B,eAAW9B,cAAIQ,MAAJ,GAAaN,QAAb,EApBa;AAqBxB6B,SAAK/B,cAAIC,MAAJ,GAAaC,QAAb,EArBmB;AAsBxB8B,eAAWhC,cAAIC,MAAJ,GAAaC,QAAb,EAtBa;AAuBxB+B,iBAAajC,cAAIC,MAAJ,GAAaC,QAAb,EAvBW;AAwBxBgC,gBAAYlC,cAAIC,MAAJ,GAAaC,QAAb,EAxBY;AAyBxBiC,sBAAkBnC,cAAIC,MAAJ,GAAaC,QAAb,EAzBM;AA0BxBkC,wBAAoBpC,cAAIC,MAAJ,GAAaC,QAAb,EA1BI;AA2BxBmC,gBAAYrC,cAAIC,MAAJ,GAAaC,QAAb,EA3BY;AA4BxBoC,sBAAkBtC,cAAIC,MAAJ,GAAaC,QAAb,EA5BM;AA6BxBqC,wBAAoBvC,cAAIC,MAAJ,GAAaC,QAAb,EA7BI;AA8BxBsC,gBAAYxC,cAAIC,MAAJ,GAAaC,QAAb,EA9BY;AA+BxBuC,mBAAezC,cAAIC,MAAJ,GAAaC,QAAb,EA/BS;AAgCxBwC,iBAAa1C,cAAIC,MAAJ,GAAaC,QAAb,EAhCW;AAiCxByC,uBAAmB3C,cAAIC,MAAJ,GAAaC,QAAb,EAjCK;AAkCxB0C,SAAK5C,cAAIQ,MAAJ,GAAaN,QAAb,EAlCmB;AAmCxB2C,kBAAc7C,cAAIQ,MAAJ,GAAaN,QAAb,EAnCU;AAoCxB4C,WAAO9C,cAAIQ,MAAJ,GAAaN,QAAb,EApCiB;AAqCxB6C,6BAAyB/C,cAAIQ,MAAJ,GAAaN,QAAb,EArCD;AAsCxB8C,qBAAiBhD,cAAIQ,MAAJ,GAAaN,QAAb,EAtCO;AAuCxB+C,qBAAiBjD,cAAIQ,MAAJ,GAAaN,QAAb,EAvCO;AAwCxBgD,uBAAmBlD,cAAIQ,MAAJ,GAAaN,QAAb,EAxCK;AAyCxBiD,yBAAqBnD,cAAIQ,MAAJ,GAAaN,QAAb,EAzCG;AA0CxBkD,uBAAmBpD,cAAIQ,MAAJ,GAAaN,QAAb,EA1CK;AA2CxBmD,uBAAmBrD,cAAIQ,MAAJ,GAAaN,QAAb,EA3CK;AA4CxBoD,aAAStD,cAAIQ,MAAJ,GAAaN,QAAb,EA5Ce;AA6CxBqD,eAAWvD,cAAIQ,MAAJ,GAAaN,QAAb,EA7Ca;AA8CxBsD,aAASxD,cAAIQ,MAAJ,GAAaN,QAAb,EA9Ce;AA+CxBuD,yBAAqBzD,cAAIC,MAAJ,GAAaC,QAAb,EA/CG;AAgDxBwD,uBAAmB1D,cAAIC,MAAJ,GAAaC,QAAb,EAhDK;AAiDxByD,aAAS3D,cAAIQ,MAAJ,GAAaN,QAAb,EAjDe;AAkDxB0D,eAAW5D,cAAIQ,MAAJ,GAAaN,QAAb,EAlDa;AAmDxB2D,iBAAa7D,cAAIQ,MAAJ,GAAaN,QAAb,EAnDW;AAoDxB4D,gBAAY9D,cAAIC,MAAJ,GAAa8D,KAAb,CAAmBC,OAAOC,MAAP,CAAcC,qBAAd,CAAnB,EAA8ChE,QAA9C,EApDY;AAqDxBiE,iBAAanE,cAAIQ,MAAJ,GAAaN,QAAb,EArDW;AAsDxBkE,gBAAYpE,cAAIQ,MAAJ,GAAaN,QAAb,EAtDY;AAuDxBmE,YAAQrE,cAAIC,MAAJ,GAAaC,QAAb,EAvDgB;AAwDxBoE,YAAQtE,cAAIC,MAAJ,GAAaC,QAAb,EAxDgB;AAyDxBqE,YAAQvE,cAAIC,MAAJ,GAAaC,QAAb,EAzDgB;AA0DxBsE,WAAOxE,cAAIC,MAAJ,GAAaC,QAAb,EA1DiB;AA2DxBuE,uBAAmBzE,cAAI0E,OAAJ,GAAcxE,QAAd,EA3DK;AA4DxByE,0BAAsB3E,cAAI0E,OAAJ,GAAcxE,QAAd,EA5DE;AA6DxB0E,kBAAc5E,cAAIC,MAAJ,GAAaC,QAAb,EA7DU;AA8DxB2E,iBAAa7E,cAAIQ,MAAJ,GAAaN,QAAb,EA9DW;AA+DxB4E,mBAAe9E,cAAIqB,IAAJ,GAAWnB,QAAX,EA/DS;AAgExB6E,mBAAe/E,cAAIQ,MAAJ,GAAaN,QAAb,EAhES;AAiExB8E,qBAAiBhF,cAAIqB,IAAJ,GAAWnB,QAAX,EAjEO;AAkExBiF,gBAAYnF,cAAIQ,MAAJ,GAAaS,QAAb;AAlEY,CAArB;;AAqEA,IAAMmE,0BAAS;AAClB7E,QAAI,EAAE8E,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BC,YAAY,IAA3C,EAAiDC,eAAe,IAAhE,EADc;AAElB3E,YAAQ,EAAEwE,MAAM5F,UAAUgG,MAAlB,EAFU;AAGlB3E,cAAU,EAAEuE,MAAM5F,UAAUgG,MAAlB,EAHQ;AAIlB1E,WAAO,EAAEsE,MAAM5F,UAAUgG,MAAlB,EAJW;AAKlBzE,aAAS,EAAEqE,MAAM5F,UAAUgG,MAAlB,EAA0BC,UAAU,IAApC,EALS;AAMlBxE,gBAAY,EAAEmE,MAAM5F,UAAUgG,MAAlB,EAA0BC,UAAU,IAApC,EANM;AAOlBvE,YAAQ;AACJkE,cAAM5F,UAAUkG,IAAV,CAAeC,kBAAOC,IAAtB,EAA4BD,kBAAOE,MAAnC,CADF;AAEJC,sBAAcH,kBAAOC,IAFjB;AAGJG,mBAAW;AAHP,KAPU;AAYlB5E,gBAAY,EAAEiE,MAAM5F,UAAUwG,QAAlB,EAA4BD,WAAW,KAAvC,EAZM;AAalB1E,oBAAgB;AACZ+D,cAAM5F,UAAUkG,IAAV,CAAeO,0BAAeC,MAA9B,EAAsCD,0BAAeE,OAArD,EACFF,0BAAeG,QADb,EACuBH,0BAAeI,SADtC,EAEFJ,0BAAeK,OAFb,CADM;AAIZP,mBAAW;AAJC,KAbE;AAmBlBzE,cAAU,EAAE8D,MAAM5F,UAAUgG,MAAlB,EAnBQ;AAoBlBtF,kBAAc,EAAEkF,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EApBI;AAqBlBxE,oBAAgB,EAAE6D,MAAM5F,UAAUgG,MAAlB,EArBE;AAsBlBhE,aAAS,EAAE4D,MAAM5F,UAAUgG,MAAlB,EAtBS;AAuBlB/D,aAAS,EAAE2D,MAAM5F,UAAUgG,MAAlB,EAvBS;AAwBlB9D,cAAU,EAAE0D,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EAxBQ;AAyBlBpE,eAAW,EAAEyD,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EAzBO;AA0BlBnE,kBAAc,EAAEwD,MAAM5F,UAAUgG,MAAV,CAAiB,CAAjB,CAAR,EAA6BO,WAAW,KAAxC,EAA+CD,cAAc,IAA7D,EA1BI;AA2BlBhG,WAAO,EAAEsF,MAAM5F,UAAUgG,MAAlB,EAA0Be,UAAU,EAAEC,SAAS,IAAX,EAApC,EA3BW;AA4BlBpG,cAAU,EAAEgF,MAAM5F,UAAUgG,MAAlB,EA5BQ;AA6BlBrF,SAAK,EAAEiF,MAAM5F,UAAUgG,MAAlB,EA7Ba;AA8BlB3D,eAAW,EAAEuD,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EAAiDD,cAAc,CAA/D,EA9BO;AA+BlBhE,SAAK,EAAEsD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EA/Ba;AAgClBhE,eAAW,EAAEqD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EAhCO;AAiClB/D,iBAAa,EAAEoD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EAjCK;AAkClB9D,gBAAY,EAAEmD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EAlCM;AAmClB7D,sBAAkB,EAAEkD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EAnCA;AAoClB5D,wBAAoB,EAAEiD,MAAM5F,UAAUgG,MAAlB,EAA0BO,WAAW,KAArC,EApCF;AAqClB3D,gBAAY,EAAEgD,MAAM5F,UAAUgG,MAAlB,EArCM;AAsClBnD,sBAAkB,EAAE+C,MAAM5F,UAAUgG,MAAlB,EAtCA;AAuClBlD,wBAAoB,EAAE8C,MAAM5F,UAAUgG,MAAlB,EAvCF;AAwClBjD,gBAAY,EAAE6C,MAAM5F,UAAUgG,MAAlB,EAxCM;AAyClBhD,mBAAe,EAAE4C,MAAM5F,UAAUgG,MAAlB,EAzCG;AA0ClB/C,iBAAa,EAAE2C,MAAM5F,UAAUgG,MAAlB,EA1CK;AA2ClB9C,uBAAmB;AACf0C,cAAM5F,UAAUkG,IAAV,CAAee,6BAAkBC,OAAjC,EAA0CD,6BAAkBE,QAA5D,EACFF,6BAAkBG,aADhB,EAC+BH,6BAAkBI,aADjD,EAEFJ,6BAAkBK,YAFhB,CADS;AAIff,mBAAW;AAJI,KA3CD;AAiDlBpD,SAAK,EAAEyC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAjDa;AAkDlBlD,kBAAc,EAAEwC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAlDI;AAmDlBjD,WAAO,EAAEuC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAnDW;AAoDlBhD,6BAAyB,EAAEsC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EApDP;AAqDlB/C,qBAAiB,EAAEqC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EArDC;AAsDlB9C,qBAAiB,EAAEoC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAtDC;AAuDlB7C,uBAAmB,EAAEmC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAvDD;AAwDlB5C,yBAAqB,EAAEkC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAxDH;AAyDlB3C,uBAAmB,EAAEiC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EAzDD;AA0DlB1C,uBAAmB,EAAEgC,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EA1DD;AA2DlBzC,aAAS,EAAE+B,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EA3DS;AA4DlBxC,eAAW,EAAE8B,MAAM5F,UAAUuH,OAAV,CAAkB,EAAlB,EAAsB,CAAtB,CAAR,EAAkCjB,cAAc,GAAhD,EA5DO;AA6DlBvC,aAAS,EAAE6B,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EA7DS;AA8DlB7B,yBAAqB,EAAE4B,MAAM5F,UAAUgG,MAAlB,EA9DH;AA+DlB/B,uBAAmB,EAAE2B,MAAM5F,UAAUgG,MAAlB,EA/DD;AAgElB9B,aAAS,EAAE0B,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAhES;AAiElB1B,eAAW,EAAEyB,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EAjEO;AAkElBnC,iBAAa,EAAEwB,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EAlEK;AAmElBlC,gBAAY;AACRuB,cAAM5F,UAAUkG,IAAV,CAAe3B,OAAOC,MAAP,CAAcC,qBAAd,CAAf,CADE;AAER8B,mBAAW;AAFH,KAnEM;AAuElB7B,iBAAa,EAAEkB,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BS,cAAc,CAA7C,EAAgDC,WAAW,KAA3D,EAvEK;AAwElB5B,gBAAY,EAAEiB,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAxEM;AAyElBjB,YAAQ,EAAEgB,MAAM5F,UAAUgG,MAAlB,EAzEU;AA0ElBnB,YAAQ,EAAEe,MAAM5F,UAAUgG,MAAlB,EA1EU;AA2ElBlB,YAAQ,EAAEc,MAAM5F,UAAUgG,MAAlB,EA3EU;AA4ElBjB,WAAO,EAAEa,MAAM5F,UAAUgG,MAAlB,EA5EW;AA6ElBhB,uBAAmB,EAAEY,MAAM5F,UAAUwH,OAAlB,EAA2BlB,cAAc,KAAzC,EAAgDC,WAAW,KAA3D,EA7ED;AA8ElBrB,0BAAsB,EAAEU,MAAM5F,UAAUwH,OAAlB,EAA2BlB,cAAc,KAAzC,EAAgDC,WAAW,KAA3D,EA9EJ;AA+ElBpB,kBAAc,EAAES,MAAM5F,UAAUgG,MAAlB,EAA0BM,cAAc,GAAxC,EAA6CC,WAAW,KAAxD,EA/EI;AAgFlBnB,iBAAa,EAAEQ,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAhFK;AAiFlBR,mBAAe,EAAEO,MAAM5F,UAAUyH,IAAlB,EAjFG;AAkFlBnC,mBAAe,EAAEM,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAlFG;AAmFlBN,qBAAiB,EAAEK,MAAM5F,UAAUyH,IAAlB,EAnFC;AAoFlBC,gBAAY,EAAE9B,MAAM5F,UAAUyH,IAAlB,EApFM;AAqFlBjC,gBAAY,EAAEI,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR,EAA+BU,WAAW,KAA1C,EArFM;AAsFlBb,gBAAY,EAAEE,MAAM5F,UAAU6F,OAAV,CAAkB,EAAlB,CAAR;AAtFM,CAAf;;AA0FP,IAAM8B,UAAU;AACZC,gBAAY,IADA;AAEZC,cAAU,IAFE;AAGZC,iBAAa,IAHD;AAIZC,qBAAiB;AAJL,CAAhB;AAMA,IAAMC,QAAQC,oBAAUC,MAAV,CAAiB,OAAjB,EAA0BvC,MAA1B,EAAkCgC,OAAlC,CAAd;AACAM,oBAAUE,IAAV,GACKC,IADL,CACU;AAAA,WAAMJ,MAAMG,IAAN,CAAW,EAAElI,YAAF,EAAX,EAAsBmI,IAAtB,CAA2B;AAAA,eAAMJ,MAAMK,UAAN,CAAiBC,eAAjB,CAAN;AAAA,KAA3B,CAAN;AAAA,CADV;;kBAGeN,K","file":"model.js","sourcesContent":["/**\n * @author 4Decoder\n * @property {Integer} id Admin primaryKey\n * @property {String} name Admin short name\n * @property {Integer} created_by Admin record created by\n * @property {Integer} updated_by Admin record modified by\n * @description Admin holds record of all cities with terminal_list\n */\nimport Joi from \"joi\";\nimport * as Sequelize from \"sequelize\";\nimport sequelize from \"../../config/sequelize\";\nimport { DATABASE, GENDER, MARITAL_STATUS,\n    EMPLOYMENT_STATUS, SUBSIDIARY } from \"../../constants\";\nimport table from \"./table\";\n    \nconst force = DATABASE.DROP_TABLE_IF_EXIST.FALSE;\n\nexport const schemaLogin = {\n    email: Joi.string().optional(),\n    phone_office: Joi.string().optional(),\n    otp: Joi.string().optional(),\n    password: Joi.string().optional(),\n};\n\nexport const schemaFetch = {\n    id: Joi.number().optional(),\n    offset: Joi.number().optional(),\n    limit: Joi.number().optional(),\n    fields: Joi.string().optional(),\n};\n\nexport const schemaCreate = {\n    serial: Joi.string().optional(),\n    category: Joi.string().optional(),\n    title: Joi.string().optional(),\n    surname: Joi.string().required(),\n    other_name: Joi.string().required(),\n    gender: Joi.string().required(),\n    birth_date: Joi.date().required(),\n    marital_status: Joi.string().required(),\n    children: Joi.number().optional(),\n    phone_office: Joi.string().required(),\n    phone_personal: Joi.string().optional(),\n    address: Joi.string().optional(),\n    village: Joi.string().optional(),\n    state_id: Joi.number().required(),\n    county_id: Joi.number().required(),\n    country_iso2: Joi.string().optional(),\n    email: Joi.string().optional(),\n    password: Joi.string().optional(),\n    otp: Joi.string().optional(),\n    otp_count: Joi.number().optional(),\n    kin: Joi.string().required(),\n    kin_phone: Joi.string().required(),\n    kin_address: Joi.string().required(),\n    guarantor1: Joi.string().required(),\n    guarantor1_phone: Joi.string().required(),\n    guarantor1_address: Joi.string().required(),\n    guarantor2: Joi.string().optional(),\n    guarantor2_phone: Joi.string().optional(),\n    guarantor2_address: Joi.string().optional(),\n    profession: Joi.string().optional(),\n    qualification: Joi.string().optional(),\n    institution: Joi.string().optional(),\n    employment_status: Joi.string().required(),\n    tax: Joi.number().optional(),\n    basic_salary: Joi.number().optional(),\n    bonus: Joi.number().optional(),\n    entertainment_allowance: Joi.number().optional(),\n    house_allowance: Joi.number().optional(),\n    lunch_allowance: Joi.number().optional(),\n    medical_allowance: Joi.number().optional(),\n    transport_allowance: Joi.number().optional(),\n    utility_allowance: Joi.number().optional(),\n    welfare_allowance: Joi.number().optional(),\n    pension: Joi.number().optional(),\n    assurance: Joi.number().optional(),\n    bank_id: Joi.number().optional(),\n    bank_account_number: Joi.string().optional(),\n    bank_account_name: Joi.string().optional(),\n    rank_id: Joi.number().optional(),\n    office_id: Joi.number().required(),\n    superior_id: Joi.number().required(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).required(),\n    terminal_id: Joi.number().required(),\n    vehicle_id: Joi.number().optional(),\n    notice: Joi.string().optional(),\n    rating: Joi.string().optional(),\n    remark: Joi.string().optional(),\n    photo: Joi.string().optional(),\n    is_salary_payable: Joi.boolean().optional(),\n    is_document_complete: Joi.boolean().optional(),\n    access_level: Joi.string().optional(),\n    approved_by: Joi.number().optional(),\n    approved_date: Joi.date().optional(),\n    disengaged_by: Joi.number().optional(),\n    disengaged_date: Joi.date().optional(),\n    created_by: Joi.number().required(),\n};\n\nexport const schemaUpdate = {\n    serial: Joi.string().optional(),\n    category: Joi.string().optional(),\n    title: Joi.string().optional(),\n    surname: Joi.string().optional(),\n    other_name: Joi.string().optional(),\n    gender: Joi.string().optional(),\n    birth_date: Joi.date().optional(),\n    marital_status: Joi.string().optional(),\n    children: Joi.number().optional(),\n    phone_office: Joi.string().optional(),\n    phone_personal: Joi.string().optional(),\n    address: Joi.string().optional(),\n    village: Joi.string().optional(),\n    state_id: Joi.number().optional(),\n    county_id: Joi.number().optional(),\n    country_iso2: Joi.string().optional(),\n    email: Joi.string().optional(),\n    password: Joi.string().optional(),\n    otp: Joi.string().optional(),\n    otp_count: Joi.number().optional(),\n    kin: Joi.string().optional(),\n    kin_phone: Joi.string().optional(),\n    kin_address: Joi.string().optional(),\n    guarantor1: Joi.string().optional(),\n    guarantor1_phone: Joi.string().optional(),\n    guarantor1_address: Joi.string().optional(),\n    guarantor2: Joi.string().optional(),\n    guarantor2_phone: Joi.string().optional(),\n    guarantor2_address: Joi.string().optional(),\n    profession: Joi.string().optional(),\n    qualification: Joi.string().optional(),\n    institution: Joi.string().optional(),\n    employment_status: Joi.string().optional(),\n    tax: Joi.number().optional(),\n    basic_salary: Joi.number().optional(),\n    bonus: Joi.number().optional(),\n    entertainment_allowance: Joi.number().optional(),\n    house_allowance: Joi.number().optional(),\n    lunch_allowance: Joi.number().optional(),\n    medical_allowance: Joi.number().optional(),\n    transport_allowance: Joi.number().optional(),\n    utility_allowance: Joi.number().optional(),\n    welfare_allowance: Joi.number().optional(),\n    pension: Joi.number().optional(),\n    assurance: Joi.number().optional(),\n    bank_id: Joi.number().optional(),\n    bank_account_number: Joi.string().optional(),\n    bank_account_name: Joi.string().optional(),\n    rank_id: Joi.number().optional(),\n    office_id: Joi.number().optional(),\n    superior_id: Joi.number().optional(),\n    subsidiary: Joi.string().valid(Object.values(SUBSIDIARY)).optional(),\n    terminal_id: Joi.number().optional(),\n    vehicle_id: Joi.number().optional(),\n    notice: Joi.string().optional(),\n    rating: Joi.string().optional(),\n    remark: Joi.string().optional(),\n    photo: Joi.string().optional(),\n    is_salary_payable: Joi.boolean().optional(),\n    is_document_complete: Joi.boolean().optional(),\n    access_level: Joi.string().optional(),\n    approved_by: Joi.number().optional(),\n    approved_date: Joi.date().optional(),\n    disengaged_by: Joi.number().optional(),\n    disengaged_date: Joi.date().optional(),\n    updated_by: Joi.number().required(),\n};\n\nexport const schema = {\n    id: { type: Sequelize.INTEGER(11), primaryKey: true, autoIncrement: true },\n    serial: { type: Sequelize.STRING },\n    category: { type: Sequelize.STRING },\n    title: { type: Sequelize.STRING },\n    surname: { type: Sequelize.STRING, notEmpty: true },\n    other_name: { type: Sequelize.STRING, notEmpty: true },\n    gender: {\n        type: Sequelize.ENUM(GENDER.MALE, GENDER.FEMALE),\n        defaultValue: GENDER.MALE,\n        allowNull: false,\n    },\n    birth_date: { type: Sequelize.DATEONLY, allowNull: false },\n    marital_status: {\n        type: Sequelize.ENUM(MARITAL_STATUS.SINGLE, MARITAL_STATUS.MARRIED,\n            MARITAL_STATUS.DIVORSED, MARITAL_STATUS.SEPARATED,\n            MARITAL_STATUS.WIDOWED),\n        allowNull: false,\n    },\n    children: { type: Sequelize.STRING },\n    phone_office: { type: Sequelize.STRING, allowNull: false },\n    phone_personal: { type: Sequelize.STRING },\n    address: { type: Sequelize.STRING },\n    village: { type: Sequelize.STRING },\n    state_id: { type: Sequelize.INTEGER(11), allowNull: false },\n    county_id: { type: Sequelize.INTEGER(11), allowNull: false },\n    country_iso2: { type: Sequelize.STRING(2), allowNull: false, defaultValue: \"ng\" },\n    email: { type: Sequelize.STRING, validate: { isEmail: true } },\n    password: { type: Sequelize.STRING },\n    otp: { type: Sequelize.STRING },\n    otp_count: { type: Sequelize.INTEGER(11), allowNull: false, defaultValue: 0 },\n    kin: { type: Sequelize.STRING, allowNull: false },\n    kin_phone: { type: Sequelize.STRING, allowNull: false },\n    kin_address: { type: Sequelize.STRING, allowNull: false },\n    guarantor1: { type: Sequelize.STRING, allowNull: false },\n    guarantor1_phone: { type: Sequelize.STRING, allowNull: false },\n    guarantor1_address: { type: Sequelize.STRING, allowNull: false },\n    guarantor2: { type: Sequelize.STRING },\n    guarantor2_phone: { type: Sequelize.STRING },\n    guarantor2_address: { type: Sequelize.STRING },\n    profession: { type: Sequelize.STRING },\n    qualification: { type: Sequelize.STRING },\n    institution: { type: Sequelize.STRING },\n    employment_status: {\n        type: Sequelize.ENUM(EMPLOYMENT_STATUS.ON_DUTY, EMPLOYMENT_STATUS.ON_LEAVE,\n            EMPLOYMENT_STATUS.ON_RETIREMENT, EMPLOYMENT_STATUS.ON_SUSPENSION,\n            EMPLOYMENT_STATUS.ON_PROBATION),\n        allowNull: false,\n    },\n    tax: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    basic_salary: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    bonus: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    entertainment_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    house_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    lunch_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    medical_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    transport_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    utility_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    welfare_allowance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    pension: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    assurance: { type: Sequelize.DECIMAL(10, 2), defaultValue: 0.0 },\n    bank_id: { type: Sequelize.INTEGER(11) },\n    bank_account_number: { type: Sequelize.STRING },\n    bank_account_name: { type: Sequelize.STRING },\n    rank_id: { type: Sequelize.INTEGER(11) },\n    office_id: { type: Sequelize.INTEGER(11), allowNull: false },\n    superior_id: { type: Sequelize.INTEGER(11), allowNull: false },\n    subsidiary: {\n        type: Sequelize.ENUM(Object.values(SUBSIDIARY)),\n        allowNull: false,\n    },\n    terminal_id: { type: Sequelize.INTEGER(11), defaultValue: 1, allowNull: false },\n    vehicle_id: { type: Sequelize.INTEGER(11) },\n    notice: { type: Sequelize.STRING },\n    rating: { type: Sequelize.STRING },\n    remark: { type: Sequelize.STRING },\n    photo: { type: Sequelize.STRING },\n    is_salary_payable: { type: Sequelize.BOOLEAN, defaultValue: false, allowNull: false },\n    is_document_complete: { type: Sequelize.BOOLEAN, defaultValue: false, allowNull: false },\n    access_level: { type: Sequelize.STRING, defaultValue: \"0\", allowNull: false },\n    approved_by: { type: Sequelize.INTEGER(11) },\n    approved_date: { type: Sequelize.DATE },\n    disengaged_by: { type: Sequelize.INTEGER(11) },\n    disengaged_date: { type: Sequelize.DATE },\n    last_login: { type: Sequelize.DATE },\n    created_by: { type: Sequelize.INTEGER(11), allowNull: false },\n    updated_by: { type: Sequelize.INTEGER(11) },\n};\n\n\nconst options = {\n    timestamps: true,\n    paranoid: true,\n    underscored: true,\n    freezeTableName: true,\n};\nconst Admin = sequelize.define(\"admin\", schema, options);\nsequelize.sync()\n    .then(() => Admin.sync({ force }).then(() => Admin.bulkCreate(table)));\n    \nexport default Admin;"]}