{"version":3,"sources":["../../src/middleware/authorization.js"],"names":["checkAuth","isValidStaff","isValidTrainee","isValidCustomer","getToken","req","headers","authorization","split","query","token","res","next","JWT","jwtSecret","err","decoded","user","userType","id","email","method","body","created_by","updated_by","console","log"],"mappings":"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","file":"authorization.js","sourcesContent":["import { verify } from \"jsonwebtoken\";\nimport { JWT } from \"../constants\";\nimport { fail } from \"../lib/response\";\nimport { hasProp } from \"../lib/helpers\";\n\n// Retrieve token from request header\nfunction getToken(req) {\n    if (req.headers.authorization && req.headers.authorization.split(\" \")[ 0 ] === \"Bearer\") {\n        return req.headers.authorization.split(\" \")[ 1 ];\n    } if (req.query && hasProp(req.query, \"token\")) {\n        return req.query.token;\n    }\n    return null;\n}\n\nexport function checkAuth(req, res, next) {\n    const token = getToken(req);\n    if (!token) return fail(res, 403, \"No token found in request header!\");\n    return verify(token, JWT.jwtSecret, (err, decoded) => {\n        if (err) return fail(res, 500, \"Failed to authenticate token.!\");\n        req.user = { userType: decoded.userType, id: decoded.id, email: decoded.email };\n        return next();\n    });\n}\n\nexport function isValidStaff(req, res, next) {\n    const { userType, id, email } = req.user;\n    if (userType !== \"staff\") return fail(res, 403, \"Invalid Staff credentials!\");\n    if (req.method === \"POST\") {\n        req.body.created_by = id;\n    } else if (req.method === \"PUT\") {\n        req.body.updated_by = id;\n    }\n    console.log(\"\\nValidating Staff: \", userType, id, email);\n    return next();\n}\n\nexport function isValidTrainee(req, res, next) {\n    const { userType, id, email } = req.user;\n    if (userType !== \"trainee\") return fail(res, 403, \"Invalid Trainee credentials!\");\n    if (req.method === \"POST\") {\n        req.body.created_by = id;\n    } else if (req.method === \"PUT\") {\n        req.body.updated_by = id;\n    }\n    console.log(\"\\nValidating Trainee: \", userType, id, email);\n    return next();\n}\n\nexport function isValidCustomer(req, res, next) {\n    const { userType, id, email } = req.user;\n    if (userType !== \"customer\") return fail(res, 403, \"Invalid Customer credentials!\");\n    if (req.method === \"POST\") {\n        req.body.created_by = id;\n    } else if (req.method === \"PUT\") {\n        req.body.updated_by = id;\n    }\n    console.log(\"\\nValidating Customer: \", userType, id, email);\n    return next();\n}\n"]}